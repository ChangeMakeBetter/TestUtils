package test.webservice;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 3.2.14 2024-04-10T13:53:25.336+08:00 Generated source version: 3.2.14
 */
@WebServiceClient(name = "SI_POS2CRM_003_SenderService",
  wsdlLocation = "http://wdqas01.zhouheiya.cn:50000/dir/wsdl?p=ic/4a0f4b0e4a20377793136cee31ae99f4",
  targetNamespace = "http://www.zhy.com/pos/pos2crm_003")
public class SIPOS2CRM003SenderService extends Service {

  public final static URL WSDL_LOCATION;

  public final static QName SERVICE = new QName("http://www.zhy.com/pos/pos2crm_003", "SI_POS2CRM_003_SenderService");
  public final static QName HTTPSPort = new QName("http://www.zhy.com/pos/pos2crm_003", "HTTPS_Port");
  public final static QName HTTPPort = new QName("http://www.zhy.com/pos/pos2crm_003", "HTTP_Port");

  static {
    URL url = null;
    try {
      url = new URL("http://wdqas01.zhouheiya.cn:50000/dir/wsdl?p=ic/4a0f4b0e4a20377793136cee31ae99f4");
    } catch (MalformedURLException e) {
      java.util.logging.Logger.getLogger(SIPOS2CRM003SenderService.class.getName())
        .log(java.util.logging.Level.INFO,
          "Can not initialize the default wsdl from {0}",
          "http://wdqas01.zhouheiya.cn:50000/dir/wsdl?p=ic/4a0f4b0e4a20377793136cee31ae99f4");
    }
    WSDL_LOCATION = url;
  }

  public SIPOS2CRM003SenderService(URL wsdlLocation) {
    super(wsdlLocation, SERVICE);
  }

  public SIPOS2CRM003SenderService(URL wsdlLocation, QName serviceName) {
    super(wsdlLocation, serviceName);
  }

  public SIPOS2CRM003SenderService() {
    super(WSDL_LOCATION, SERVICE);
  }

  public SIPOS2CRM003SenderService(WebServiceFeature... features) {
    super(WSDL_LOCATION, SERVICE, features);
  }

  public SIPOS2CRM003SenderService(URL wsdlLocation, WebServiceFeature... features) {
    super(wsdlLocation, SERVICE, features);
  }

  public SIPOS2CRM003SenderService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
    super(wsdlLocation, serviceName, features);
  }

  /**
   * @return returns SIPOS2CRM003Sender
   */
  @WebEndpoint(name = "HTTPS_Port")
  public SIPOS2CRM003Sender getHTTPSPort() {
    return super.getPort(HTTPSPort, SIPOS2CRM003Sender.class);
  }

  /**
   * @param features A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the
   *                 <code>features</code> parameter will have their default values.
   * @return returns SIPOS2CRM003Sender
   */
  @WebEndpoint(name = "HTTPS_Port")
  public SIPOS2CRM003Sender getHTTPSPort(WebServiceFeature... features) {
    return super.getPort(HTTPSPort, SIPOS2CRM003Sender.class, features);
  }

  /**
   * @return returns SIPOS2CRM003Sender
   */
  @WebEndpoint(name = "HTTP_Port")
  public SIPOS2CRM003Sender getHTTPPort() {
    return super.getPort(HTTPPort, SIPOS2CRM003Sender.class);
  }

  /**
   * @param features A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the
   *                 <code>features</code> parameter will have their default values.
   * @return returns SIPOS2CRM003Sender
   */
  @WebEndpoint(name = "HTTP_Port")
  public SIPOS2CRM003Sender getHTTPPort(WebServiceFeature... features) {
    return super.getPort(HTTPPort, SIPOS2CRM003Sender.class, features);
  }

}
